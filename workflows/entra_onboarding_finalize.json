{
  "name": "entra_onboarding_finalize",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "entra-onboard-finalize",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "1a2b75a1-9bc6-4ea7-bab2-968d04df5189",
      "name": "Webhook (Finalize)",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -2656,
        16
      ],
      "webhookId": "c2da7cf8-ef5e-4a4a-8b80-04a95b3a236b"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "name": "user_id",
              "value": "={{$json.body.payload.user_id}}",
              "type": "string"
            },
            {
              "name": "app_id",
              "value": "={{$json.body.payload.app_id}}",
              "type": "string"
            },
            {
              "name": "application_name",
              "value": "={{$json.body.payload.application_name}}",
              "type": "string"
            },
            {
              "name": "sso",
              "value": "={{$json.body.payload.sso}}",
              "type": "object"
            },
            {
              "name": "contacts",
              "value": "={{$json.body.payload.contacts}}",
              "type": "object"
            },
            {
              "name": "environment",
              "value": "={{$json.body.payload.environment}}",
              "type": "string"
            },
            {
              "name": "justification_text",
              "value": "={{$json.body.payload.justification_text}}",
              "type": "string"
            },
            {
              "name": "answers",
              "value": "={{$json.body.payload.answers || []}}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2432,
        16
      ],
      "id": "e33e1922-d432-42a4-b29d-b229bc0e8559",
      "name": "Extract Payload"
    },
    {
      "parameters": {
        "url": "https://raw.githubusercontent.com/GoyaAcademy/Entra-ID-Onboarding-Automation/refs/heads/main/templates/entra_app_onboarding.yaml",
        "options": {
          "response": {
            "response": {
              "responseFormat": "text"
            }
          },
          "timeout": 10000
        }
      },
      "id": "f20e01a8-a15c-4a77-a890-927e86372006",
      "name": "Fetch YAML Template",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        -2208,
        -144
      ]
    },
    {
      "parameters": {
        "jsCode": "// 1) Read the template text (fallback to 'body' if your HTTP node returns there)\nconst tpl = String($json.data ?? $json.body ?? '');\n\n// 2) Pull structured values from the merged item\nconst sso      = $json.sso ?? {};\nconst contacts = $json.contacts ?? {};\nconst tech     = $json.technology ?? {};\nconst pattern  = $json.pattern ?? {};\nconst entra    = $json.entra_id ?? {};\n\n// helper for picking first/second URL safely\nconst pick = (arr, i) => Array.isArray(arr) && arr[i] != null ? String(arr[i]) : '';\n\n// 3) Build replacements for all {{placeholders}}\nconst replacements = {\n  application_id:          String($json.app_id ?? 'TBD'),\n  application_name:        String($json.application_name ?? 'TBD'),\n  environment:             String($json.environment ?? 'TBD'),\n  custodian_name:          String(contacts.custodian_name ?? 'TBD'),\n  architect_name:          String(contacts.architect_name ?? 'TBD'),\n  operating_system:        String(tech.os ?? 'TBD'),\n  database:                String(tech.db ?? 'TBD'),\n  application_architecture:String(tech.architecture ?? 'TBD'),\n\n  // If your agent computed a pattern, prefer it, else fall back to sso.type, else TBD\n  sso_type:                String(pattern.type ?? sso.type ?? 'TBD'),\n  justification_text:      String($json.justification_text ?? 'TBD'),\n\n  // If you already have Entra details in the item, use them; otherwise leave TBD\n  entra_tenant_id:         String(entra.tenant_id ?? 'TBD'),\n  entra_client_id:         String(entra.client_id ?? 'TBD'),\n\n  // URLs (pick first two if arrays are longer)\n  redirect_url_1:          pick(sso.redirect_urls, 0),\n  redirect_url_2:          pick(sso.redirect_urls, 1),\n  reply_url_1:             pick(sso.reply_urls, 0),\n  reply_url_2:             pick(sso.reply_urls, 1),\n  logout_url_1:            pick(sso.logout_urls, 0),\n  logout_url_2:            pick(sso.logout_urls, 1),\n\n  // SAML bits (present for SAML flows; fine if empty for WS-Fed)\n  saml_metadata_url:       String(sso.saml?.metadata_url ?? ''),\n  certificate_1:           String(sso.saml?.certificate ?? 'TBD'),\n  certificate_2:           String($json.certificate_2 ?? 'TBD'),\n\n  // Audit/meta\n  creator:                 String($json.user_id ?? 'unknown'),\n  creation_timestamp:      new Date().toISOString(),\n  correlation_id:          $execution.id,\n};\n\n// 4) Apply replacements\nlet filled = tpl;\nfor (const [k, v] of Object.entries(replacements)) {\n  filled = filled.replace(new RegExp(`{{\\\\s*${k}\\\\s*}}`, 'g'), String(v));\n}\n\n// 5) Name/branch/path and base64 content\nconst stamp    = new Date().toISOString().slice(0, 19).replace(/[:T]/g, '-');\nconst safeName = String($json.app_id ?? $json.application_name ?? 'app').replace(/[^a-zA-Z0-9._-]/g, '-');\nconst branch   = `onboard/${safeName}-${stamp}`;\nconst path     = `onboarding/${safeName}-${stamp}.yaml`;\nconst message  = `Onboard ${safeName} via agent`;\nconst content_b64 = Buffer.from(filled, 'utf8').toString('base64');\n\n// 6) Return payload for the GitHub step\nreturn [{ json: { branch, path, message, content_b64, preview: filled.slice(0, 400) } }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1760,
        16
      ],
      "id": "5e90ab5d-c4b4-4462-b638-0659a715fba0",
      "name": "Fill Template"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "name": "owner",
              "value": "GoyaAcademy",
              "type": "string"
            },
            {
              "name": "repo",
              "value": "Entra-ID-Onboarding-Automation",
              "type": "string"
            },
            {
              "name": "base",
              "value": "main",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1536,
        16
      ],
      "id": "bca746bc-cc5e-4e16-bb99-5760994b2080",
      "name": "Repo Config"
    },
    {
      "parameters": {
        "url": "=https://api.github.com/repos/{{$json.owner}}/{{$json.repo}}/git/ref/heads/{{$json.base}}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "githubApi",
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1312,
        16
      ],
      "id": "0a1594b9-9e57-4707-8646-293343a53034",
      "name": "Get Base Ref",
      "credentials": {
        "githubApi": {
          "id": "QbrZkgPGrKH7888z",
          "name": "CRED.github"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "name": "base_sha",
              "value": "={{ $json.object.sha }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1088,
        16
      ],
      "id": "144bd16c-f6d5-440e-baf3-dfb1d00540df",
      "name": "Extract Base SHA"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "name": "url",
              "value": "={{ 'https://api.github.com/repos/' + $('Repo Config').item.json.owner + '/' + $('Repo Config').item.json.repo + '/git/refs' }}",
              "type": "string"
            },
            {
              "name": "ref",
              "value": "={{ 'refs/heads/' + $('Fill Template').item.json.branch }}",
              "type": "string"
            },
            {
              "name": "sha",
              "value": "={{ $json.base_sha }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -864,
        16
      ],
      "id": "2cfa2bfd-ef04-412c-96f0-c61ca24b3ed7",
      "name": "Build Branch Request"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $json.url }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "githubApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/vnd.github+json"
            },
            {
              "name": "X-GitHub-Api-Version",
              "value": "2022-11-28"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={ \"ref\": \"{{$json.ref}}\", \"sha\": \"{{$json.sha}}\" }",
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -640,
        16
      ],
      "id": "f9aabcb0-adfa-41b1-9d30-13b9a2ccd5da",
      "name": "Create Branch",
      "credentials": {
        "githubApi": {
          "id": "QbrZkgPGrKH7888z",
          "name": "CRED.github"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "name": "owner",
              "value": "={{ $('Repo Config').item.json.owner }}",
              "type": "string"
            },
            {
              "name": "repo",
              "value": "={{ $('Repo Config').item.json.repo }}",
              "type": "string"
            },
            {
              "name": "path",
              "value": "={{ $('Fill Template').item.json.path }}",
              "type": "string"
            },
            {
              "name": "message",
              "value": "={{ $('Fill Template').item.json.message }}",
              "type": "string"
            },
            {
              "name": "content",
              "value": "={{ $('Fill Template').item.json.content_b64 }}",
              "type": "string"
            },
            {
              "name": "branch",
              "value": "={{ $('Fill Template').item.json.branch }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -416,
        16
      ],
      "id": "1e7a2b55-405d-48ee-92a5-8df47c4e1e34",
      "name": "Build Commit Request"
    },
    {
      "parameters": {
        "method": "PUT",
        "url": "=https://api.github.com/repos/{{$json.owner}}/{{$json.repo}}/contents/{{$json.path}}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "githubApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/vnd.github+json"
            },
            {
              "name": "X-GitHub-Api-Version",
              "value": "2022-11-28"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\"message\":\"{{$json.message}}\",\"content\":\"{{$json.content}}\",\"branch\":\"{{$json.branch}}\"}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -192,
        16
      ],
      "id": "8d747995-6af5-41ba-8c11-681c6560168d",
      "name": "Commit File",
      "credentials": {
        "githubApi": {
          "id": "QbrZkgPGrKH7888z",
          "name": "CRED.github"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "name": "owner",
              "value": "={{ $('Repo Config').item.json.owner }}",
              "type": "string"
            },
            {
              "name": "repo",
              "value": "={{ $('Repo Config').item.json.repo }}",
              "type": "string"
            },
            {
              "name": "head",
              "value": "={{ $('Fill Template').item.json.branch }}",
              "type": "string"
            },
            {
              "name": "base",
              "value": "={{ $('Repo Config').item.json.base }}",
              "type": "string"
            },
            {
              "name": "title",
              "value": "={{ 'Entra onboarding for ' + String($('Extract Payload').item.json.application_name || $('Extract Payload').item.json.app_id || 'app') }}",
              "type": "string"
            },
            {
              "name": "body",
              "value": "={{ 'Adds onboarding config at ' + $('Commit File').item.json.content.path + ' — generated by agent.' }}",
              "type": "string"
            },
            {
              "name": "maintainer_can_modify",
              "value": true,
              "type": "boolean"
            },
            {
              "name": "draft",
              "value": false,
              "type": "boolean"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        32,
        16
      ],
      "id": "d054458d-94ee-4881-b395-7c48b9092f1e",
      "name": "Build PR Request"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://api.github.com/repos/{{$json.owner}}/{{$json.repo}}/pulls",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "githubApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/vnd.github+json"
            },
            {
              "name": "X-GitHub-Api-Version",
              "value": "2022-11-28"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\"title\":\"{{$json.title}}\",\"head\":\"{{$json.head}}\",\"base\":\"{{$json.base}}\",\"body\":\"{{$json.body}}\",\"maintainer_can_modify\":{{$json.maintainer_can_modify}},\"draft\":{{$json.draft}}}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        256,
        16
      ],
      "id": "77b9ec0b-878b-4f93-b0e4-49d91f7bff0d",
      "name": "Open PR",
      "credentials": {
        "githubApi": {
          "id": "QbrZkgPGrKH7888z",
          "name": "CRED.github"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ { status: 'completed', prUrl: $json.html_url, branch: $('Fill Template').item.json.branch, path: $('Fill Template').item.json.path } }}",
        "options": {
          "responseCode": 200
        }
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        480,
        16
      ],
      "id": "15526a04-62b8-41e1-bd2b-ccff3e22c40f",
      "name": "Respond (PR URL)"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        -1984,
        16
      ],
      "id": "490c774c-9bb0-44ab-8ae1-82483ddce077",
      "name": "Merge Template + Values"
    }
  ],
  "pinData": {},
  "connections": {
    "Webhook (Finalize)": {
      "main": [
        [
          {
            "node": "Extract Payload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Payload": {
      "main": [
        [
          {
            "node": "Fetch YAML Template",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge Template + Values",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Fetch YAML Template": {
      "main": [
        [
          {
            "node": "Merge Template + Values",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fill Template": {
      "main": [
        [
          {
            "node": "Repo Config",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Repo Config": {
      "main": [
        [
          {
            "node": "Get Base Ref",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Base Ref": {
      "main": [
        [
          {
            "node": "Extract Base SHA",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Base SHA": {
      "main": [
        [
          {
            "node": "Build Branch Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Build Branch Request": {
      "main": [
        [
          {
            "node": "Create Branch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Branch": {
      "main": [
        [
          {
            "node": "Build Commit Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Build Commit Request": {
      "main": [
        [
          {
            "node": "Commit File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Commit File": {
      "main": [
        [
          {
            "node": "Build PR Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Build PR Request": {
      "main": [
        [
          {
            "node": "Open PR",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Open PR": {
      "main": [
        [
          {
            "node": "Respond (PR URL)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge Template + Values": {
      "main": [
        [
          {
            "node": "Fill Template",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "3f3ba4eb-b544-4cb7-af4b-16e2b82a5beb",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "7355bc4812a42067f8cd9e945721e8ed4130208f7e0fc1ebb6c0b24ea47fde5b"
  },
  "id": "mSkpVR17Z7iZBUIJ",
  "tags": []
}
